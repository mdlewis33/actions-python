name: Collect Artifacts

on:
  workflow_dispatch:

jobs:
  collect-artifacts:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get workflow runs
        id: workflow-runs
        run: |
          TOKEN=${{ secrets.TOKEN_ACTIONS_PYTHON }}
          REPO_API_URL="https://api.github.com/repos/${{ github.repository }}"
          WORKFLOWS_URL="${REPO_API_URL}/actions/workflows"
          WORKFLOWS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" \
          -H "Accept: application/vnd.github.v3+json" $WORKFLOWS_URL)
          echo "::set-output name=workflow-runs::$WORKFLOWS_RESPONSE"

      - name: Set workflow runs
        run: |
          echo "WORKFLOW_RUNS=${{ steps.workflow-runs.outputs.workflow-runs }}" >> $GITHUB_ENV

      - name: Download artifacts
        id: download
        env:
          WORKFLOW_RUNS: ${{ steps.set-workflow-runs.outputs.workflow-runs }}
        run: |
          WORKFLOWS=$(echo "$WORKFLOW_RUNS")
          NUM_WORKFLOWS=$(echo "$WORKFLOWS" | jq '.workflows | length')
          MAX_WORKFLOWS=3  # Set the desired number of workflows to check

          for ((i=0; i<NUM_WORKFLOWS && i<MAX_WORKFLOWS; i++)); do
            WORKFLOW_ID=$(echo "$WORKFLOWS" | jq -r ".workflows[$i].id")
            ARTIFACTS_URL="${REPO_API_URL}/actions/workflows/${WORKFLOW_ID}/runs?per_page=1&page=1"
            ARTIFACTS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github.v3+json" $ARTIFACTS_URL)
            
            if [ -z "$ARTIFACTS_RESPONSE" ]; then
              echo "Failed to retrieve workflow runs for workflow ID: $WORKFLOW_ID"
              exit 1
            fi
            
            RUN_ID=$(echo "$ARTIFACTS_RESPONSE" | jq -r '.workflow_runs[0].id')

            RUN_ARTIFACTS_URL="${REPO_API_URL}/actions/runs/${RUN_ID}/artifacts"
            RUN_ARTIFACTS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github.v3+json" $RUN_ARTIFACTS_URL)
            
            if [ -z "$RUN_ARTIFACTS_RESPONSE" ]; then
              echo "Failed to retrieve artifacts for run ID: $RUN_ID"
              exit 1
            fi
            
            ARTIFACT_PATHS=($(echo "$RUN_ARTIFACTS_RESPONSE" | jq -r '.artifacts[].archive_download_url'))
            
            for ARTIFACT_PATH in "${ARTIFACT_PATHS[@]}"; do
              ARTIFACT_NAME=$(basename "$ARTIFACT_PATH")
              wget -q --header="Authorization: Bearer $TOKEN" -O "./artifacts/${ARTIFACT_NAME}" $ARTIFACT_PATH
              echo "::set-output name=artifactPaths::./artifacts/${ARTIFACT_NAME}"
            done
          done

      - name: Create zip file
        run: zip -r ./all_artifacts.zip ./*

      - name: Commit and push zip
        run: |
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add ./*.zip
          git commit -m "Save artifacts"
          git push
